Yes super class variable can hold subclass object

public class Rectangle {
	private double Width;
	private double Length;
	public Rectangle(double width, double length) {
		super();
			Width = width;
		Length = length;	
	}
  public  double getArea() {
	  return Width*Length;
  }
  public class Cuboid extends Rectangle{
	
	private double height;
	public Cuboid(double width, double length, double height) {
		super(width, length);
		this.height = height;
	}
public double getVolume() {
	return getArea()*height;
}


	public static void main(String[] args) {

		Rectangle rectangle = new Cuboid(5,10,5);
		System.out.println("rectangle.width= " + rectangle.getWidth());//rectangle.width= 5.0
		System.out.println("rectangle.length= " + rectangle.getLength());//rectangle.length= 10.0
		System.out.println("rectangle.area= " + rectangle.getArea());//rectangle.area= 50.0

       Cuboid cuboid=(Cuboid)rectangle;
       	System.out.println("cuboid.width= " + cuboid.getWidth());
		System.out.println("cuboid.length= " + cuboid.getLength());
		System.out.println("cuboid.area= " + cuboid.getArea());
		System.out.println("cuboid.height= " + cuboid.getHeight());
		System.out.println("cuboid.volume= " + cuboid.getVolume());
	}

}
  